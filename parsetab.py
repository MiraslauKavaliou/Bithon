
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVMODULUSrightPOWERAND BOOL DEDENT DEF DIV ELS EQUAL IDENT IFF INDENT LOP LPAREN MINUS MODULUS MUL NAND NEWLINE NOR NOT NUMBER OR PLUS POWER RET RPAREN SET STRING XNOR XORprogram : statementsblock : INDENT statements DEDENTstatements : statement\n    | statements statementstatement : if_else_statement\n    | if_statement\n    | def_statement\n    | set_statement\n    | loop_statement\n    | return_statement\n    | expression_statement\n    | function_call\n    | blankspaceblankspace : NEWLINEfunction_call : IDENT argif_statement : IFF expression blockif_else_statement : if_statement else_statementelse_statement : ELS blockdef_statement : DEF IDENT arg blockset_statement : SET IDENT expressionarg : expression\n    | arg expression\n    |loop_statement : LOP IDENT expression expression blockexpression : NUMBERexpression : STRINGexpression : BOOLexpression : function_callexpression : LPAREN expression RPARENexpression : expression POWER expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression MODULUS expressionexpression : NOT expressionexpression : expression AND expressionexpression : expression OR expressionexpression : expression XOR expressionexpression : expression NAND expressionexpression : expression NOR expressionexpression : expression XNOR expressionexpression : expression EQUAL expressionreturn_statement : RET expressionexpression_statement : expression'
    
_lr_action_items = {'IFF':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[13,13,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,13,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,13,-19,-2,-24,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,15,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,15,-19,-2,-24,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,17,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,17,-19,-2,-24,]),'LOP':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,18,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,18,-19,-2,-24,]),'RET':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,19,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,19,-19,-2,-24,]),'IDENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,16,-45,44,16,47,48,16,-14,-25,-26,-27,16,16,-4,-17,-28,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-21,16,16,-44,-36,-18,16,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,16,-22,-20,16,-29,16,-19,-2,-24,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,20,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,20,-19,-2,-24,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,-45,21,21,-14,-25,-26,-27,21,21,-4,-17,-28,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-21,21,21,-44,-36,-18,21,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,21,-22,-20,21,-29,21,-19,-2,-24,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,-45,22,22,-14,-25,-26,-27,22,22,-4,-17,-28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-21,22,22,-44,-36,-18,22,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,22,-22,-20,22,-29,22,-19,-2,-24,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,-45,23,23,-14,-25,-26,-27,23,23,-4,-17,-28,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-21,23,23,-44,-36,-18,23,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,23,-22,-20,23,-29,23,-19,-2,-24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,24,-45,24,24,-14,-25,-26,-27,24,24,-4,-17,-28,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-21,24,24,-44,-36,-18,24,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,24,-22,-20,24,-29,24,-19,-2,-24,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,25,-45,25,25,-14,-25,-26,-27,25,25,-4,-17,-28,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-21,25,25,-44,-36,-18,25,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,25,-22,-20,25,-29,25,-19,-2,-24,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,74,76,77,],[0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,-19,-2,-24,]),'DEDENT':([3,4,5,6,7,8,9,10,11,12,14,16,20,21,22,23,26,27,30,45,46,49,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,73,74,76,77,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-45,-23,-14,-25,-26,-27,-4,-17,-28,-15,-21,-44,-36,-18,-16,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-20,-29,76,-19,-2,-24,]),'ELS':([5,54,76,],[28,-16,-2,]),'POWER':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,31,-23,-25,-26,-27,31,-28,-15,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-29,31,]),'MUL':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,32,-23,-25,-26,-27,32,-28,-15,32,32,32,32,-30,-31,-32,32,32,-35,32,32,32,32,32,32,32,32,32,32,-29,32,]),'DIV':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,33,-23,-25,-26,-27,33,-28,-15,33,33,33,33,-30,-31,-32,33,33,-35,33,33,33,33,33,33,33,33,33,33,-29,33,]),'PLUS':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,34,-23,-25,-26,-27,34,-28,-15,34,34,34,34,-30,-31,-32,-33,-34,-35,34,34,34,34,34,34,34,34,34,34,-29,34,]),'MINUS':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,35,-23,-25,-26,-27,35,-28,-15,35,35,35,35,-30,-31,-32,-33,-34,-35,35,35,35,35,35,35,35,35,35,35,-29,35,]),'MODULUS':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,36,-23,-25,-26,-27,36,-28,-15,36,36,36,36,-30,-31,-32,36,36,-35,36,36,36,36,36,36,36,36,36,36,-29,36,]),'AND':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,37,-23,-25,-26,-27,37,-28,-15,37,37,37,37,-30,-31,-32,-33,-34,-35,37,37,37,37,37,37,37,37,37,37,-29,37,]),'OR':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,38,-23,-25,-26,-27,38,-28,-15,38,38,38,38,-30,-31,-32,-33,-34,-35,38,38,38,38,38,38,38,38,38,38,-29,38,]),'XOR':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,39,-23,-25,-26,-27,39,-28,-15,39,39,39,39,-30,-31,-32,-33,-34,-35,39,39,39,39,39,39,39,39,39,39,-29,39,]),'NAND':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,40,-23,-25,-26,-27,40,-28,-15,40,40,40,40,-30,-31,-32,-33,-34,-35,40,40,40,40,40,40,40,40,40,40,-29,40,]),'NOR':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,41,-23,-25,-26,-27,41,-28,-15,41,41,41,41,-30,-31,-32,-33,-34,-35,41,41,41,41,41,41,41,41,41,41,-29,41,]),'XNOR':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,42,-23,-25,-26,-27,42,-28,-15,42,42,42,42,-30,-31,-32,-33,-34,-35,42,42,42,42,42,42,42,42,42,42,-29,42,]),'EQUAL':([11,14,16,21,22,23,29,30,45,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,75,],[-28,43,-23,-25,-26,-27,43,-28,-15,43,43,43,43,-30,-31,-32,-33,-34,-35,43,43,43,43,43,43,43,43,43,43,-29,43,]),'INDENT':([16,21,22,23,28,29,30,44,45,46,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,75,],[-23,-25,-26,-27,53,53,-28,-23,-15,-21,-36,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,53,-22,-29,53,]),'RPAREN':([16,21,22,23,30,45,46,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,69,72,],[-23,-25,-26,-27,-28,-15,-21,72,-36,-30,-31,-32,-33,-34,-35,-37,-38,-39,-40,-41,-42,-43,-22,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,53,],[2,73,]),'statement':([0,2,53,73,],[3,26,3,26,]),'if_else_statement':([0,2,53,73,],[4,4,4,4,]),'if_statement':([0,2,53,73,],[5,5,5,5,]),'def_statement':([0,2,53,73,],[6,6,6,6,]),'set_statement':([0,2,53,73,],[7,7,7,7,]),'loop_statement':([0,2,53,73,],[8,8,8,8,]),'return_statement':([0,2,53,73,],[9,9,9,9,]),'expression_statement':([0,2,53,73,],[10,10,10,10,]),'function_call':([0,2,13,16,19,24,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,53,68,71,73,],[11,11,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,11,30,30,11,]),'blankspace':([0,2,53,73,],[12,12,12,12,]),'expression':([0,2,13,16,19,24,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,53,68,71,73,],[14,14,29,46,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,46,69,70,71,14,69,75,14,]),'else_statement':([5,],[27,]),'arg':([16,44,],[45,68,]),'block':([28,29,68,75,],[52,54,74,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','compiler.py',402),
  ('block -> INDENT statements DEDENT','block',3,'p_block','compiler.py',407),
  ('statements -> statement','statements',1,'p_statements','compiler.py',412),
  ('statements -> statements statement','statements',2,'p_statements','compiler.py',413),
  ('statement -> if_else_statement','statement',1,'p_statement','compiler.py',421),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',422),
  ('statement -> def_statement','statement',1,'p_statement','compiler.py',423),
  ('statement -> set_statement','statement',1,'p_statement','compiler.py',424),
  ('statement -> loop_statement','statement',1,'p_statement','compiler.py',425),
  ('statement -> return_statement','statement',1,'p_statement','compiler.py',426),
  ('statement -> expression_statement','statement',1,'p_statement','compiler.py',427),
  ('statement -> function_call','statement',1,'p_statement','compiler.py',428),
  ('statement -> blankspace','statement',1,'p_statement','compiler.py',429),
  ('blankspace -> NEWLINE','blankspace',1,'p_newline','compiler.py',434),
  ('function_call -> IDENT arg','function_call',2,'p_function_call','compiler.py',439),
  ('if_statement -> IFF expression block','if_statement',3,'p_if_statement','compiler.py',444),
  ('if_else_statement -> if_statement else_statement','if_else_statement',2,'p_if_else_statement','compiler.py',449),
  ('else_statement -> ELS block','else_statement',2,'p_else_statement','compiler.py',454),
  ('def_statement -> DEF IDENT arg block','def_statement',4,'p_def_statement','compiler.py',459),
  ('set_statement -> SET IDENT expression','set_statement',3,'p_set_statement','compiler.py',464),
  ('arg -> expression','arg',1,'p_arg','compiler.py',469),
  ('arg -> arg expression','arg',2,'p_arg','compiler.py',470),
  ('arg -> <empty>','arg',0,'p_arg','compiler.py',471),
  ('loop_statement -> LOP IDENT expression expression block','loop_statement',5,'p_loop_statement','compiler.py',481),
  ('expression -> NUMBER','expression',1,'p_expression_number','compiler.py',486),
  ('expression -> STRING','expression',1,'p_expression_string','compiler.py',491),
  ('expression -> BOOL','expression',1,'p_expression_bool','compiler.py',496),
  ('expression -> function_call','expression',1,'p_expression_function_call','compiler.py',501),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','compiler.py',506),
  ('expression -> expression POWER expression','expression',3,'p_expression_power','compiler.py',511),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','compiler.py',516),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','compiler.py',521),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','compiler.py',526),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','compiler.py',531),
  ('expression -> expression MODULUS expression','expression',3,'p_expression_modulus','compiler.py',536),
  ('expression -> NOT expression','expression',2,'p_expression_not','compiler.py',541),
  ('expression -> expression AND expression','expression',3,'p_expression_and','compiler.py',546),
  ('expression -> expression OR expression','expression',3,'p_expression_or','compiler.py',551),
  ('expression -> expression XOR expression','expression',3,'p_expression_xor','compiler.py',556),
  ('expression -> expression NAND expression','expression',3,'p_expression_nand','compiler.py',561),
  ('expression -> expression NOR expression','expression',3,'p_expression_nor','compiler.py',566),
  ('expression -> expression XNOR expression','expression',3,'p_expression_xnor','compiler.py',571),
  ('expression -> expression EQUAL expression','expression',3,'p_equal','compiler.py',576),
  ('return_statement -> RET expression','return_statement',2,'p_return_statement','compiler.py',581),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','compiler.py',586),
]
