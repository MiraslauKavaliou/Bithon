
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL DEDENT DEF DIV ELS EQUAL IDENT IFF INDENT LOP LPAREN MINUS MODULUS MUL NEWLINE NOT NUMBER PLUS RET RPAREN STRINGprogram : statementsblock : INDENT statements DEDENTstatements : statement\n                  | statements statementstatement : if_statement\n                 | def_statement\n                 | loop_statement\n                 | return_statement\n                 | expression_statement\n                 | function_call\n                 | NEWLINEfunction_call : IDENT argif_statement : IFF expression block\n                    | IFF expression block else_statementelse_statement : ELS blockdef_statement : DEF IDENT arg blockarg : IDENT\n           | IDENT arg \n           | loop_statement : LOP IDENT expression expression blockexpression : NUMBERexpression : STRINGexpression : BOOLexpression : NOT expressionexpression : IDENTexpression : expression EQUAL expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression MODULUS expressionexpression : LPAREN expression RPARENreturn_statement : RET expressionexpression_statement : expression NEWLINE'
    
_lr_action_items = {'NEWLINE':([0,2,3,4,5,6,7,8,9,10,12,14,17,18,19,22,24,25,33,34,36,37,39,40,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[10,10,-3,-5,-6,-7,-8,-9,-10,-11,25,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,10,-26,-27,-28,-29,-30,-31,-18,-32,-14,10,-16,-15,-2,-20,]),'IFF':([0,2,3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,40,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[11,11,-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,11,-26,-27,-28,-29,-30,-31,-18,-32,-14,11,-16,-15,-2,-20,]),'DEF':([0,2,3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,40,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[13,13,-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,13,-26,-27,-28,-29,-30,-31,-18,-32,-14,13,-16,-15,-2,-20,]),'LOP':([0,2,3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,40,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,15,-26,-27,-28,-29,-30,-31,-18,-32,-14,15,-16,-15,-2,-20,]),'RET':([0,2,3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,40,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,16,-26,-27,-28,-29,-30,-31,-18,-32,-14,16,-16,-15,-2,-20,]),'IDENT':([0,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[14,14,-3,-5,-6,-7,-8,-9,-10,-11,24,32,33,35,24,-21,-22,-23,24,24,-4,-25,-34,24,24,24,24,24,24,33,33,-12,24,-33,-24,-13,14,-26,-27,-28,-29,-30,-31,-18,24,-32,-14,14,-16,-15,-2,-20,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,17,-19,17,-21,-22,-23,17,17,-4,-25,-34,17,17,17,17,17,17,-17,-12,17,-33,-24,-13,17,-26,-27,-28,-29,-30,-31,-18,17,-32,-14,17,-16,-15,-2,-20,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,18,-19,18,-21,-22,-23,18,18,-4,-25,-34,18,18,18,18,18,18,-17,-12,18,-33,-24,-13,18,-26,-27,-28,-29,-30,-31,-18,18,-32,-14,18,-16,-15,-2,-20,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,19,-19,19,-21,-22,-23,19,19,-4,-25,-34,19,19,19,19,19,19,-17,-12,19,-33,-24,-13,19,-26,-27,-28,-29,-30,-31,-18,19,-32,-14,19,-16,-15,-2,-20,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,20,-19,20,-21,-22,-23,20,20,-4,-25,-34,20,20,20,20,20,20,-17,-12,20,-33,-24,-13,20,-26,-27,-28,-29,-30,-31,-18,20,-32,-14,20,-16,-15,-2,-20,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,45,46,48,49,50,51,53,54,56,57,58,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,21,-19,21,-21,-22,-23,21,21,-4,-25,-34,21,21,21,21,21,21,-17,-12,21,-33,-24,-13,21,-26,-27,-28,-29,-30,-31,-18,21,-32,-14,21,-16,-15,-2,-20,]),'$end':([1,2,3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,41,42,43,44,45,46,48,50,51,54,56,57,58,],[0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,-26,-27,-28,-29,-30,-31,-18,-32,-14,-16,-15,-2,-20,]),'DEDENT':([3,4,5,6,7,8,9,10,14,17,18,19,22,24,25,33,34,36,37,39,41,42,43,44,45,46,48,50,51,53,54,56,57,58,],[-3,-5,-6,-7,-8,-9,-10,-11,-19,-21,-22,-23,-4,-25,-34,-17,-12,-33,-24,-13,-26,-27,-28,-29,-30,-31,-18,-32,-14,57,-16,-15,-2,-20,]),'EQUAL':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[26,-25,-21,-22,-23,26,-25,26,26,26,26,26,26,26,26,26,26,-32,26,]),'PLUS':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[27,-25,-21,-22,-23,27,-25,27,27,27,27,27,27,27,27,27,27,-32,27,]),'MINUS':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[28,-25,-21,-22,-23,28,-25,28,28,28,28,28,28,28,28,28,28,-32,28,]),'MUL':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[29,-25,-21,-22,-23,29,-25,29,29,29,29,29,29,29,29,29,29,-32,29,]),'DIV':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[30,-25,-21,-22,-23,30,-25,30,30,30,30,30,30,30,30,30,30,-32,30,]),'MODULUS':([12,14,17,18,19,23,24,36,37,38,41,42,43,44,45,46,49,50,55,],[31,-25,-21,-22,-23,31,-25,31,31,31,31,31,31,31,31,31,31,-32,31,]),'INDENT':([17,18,19,23,24,32,33,37,41,42,43,44,45,46,47,48,50,52,55,],[-21,-22,-23,40,-25,-19,-17,-24,-26,-27,-28,-29,-30,-31,40,-18,-32,40,40,]),'RPAREN':([17,18,19,24,37,38,41,42,43,44,45,46,50,],[-21,-22,-23,-25,-24,50,-26,-27,-28,-29,-30,-31,-32,]),'ELS':([39,57,],[52,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,40,],[2,53,]),'statement':([0,2,40,53,],[3,22,3,22,]),'if_statement':([0,2,40,53,],[4,4,4,4,]),'def_statement':([0,2,40,53,],[5,5,5,5,]),'loop_statement':([0,2,40,53,],[6,6,6,6,]),'return_statement':([0,2,40,53,],[7,7,7,7,]),'expression_statement':([0,2,40,53,],[8,8,8,8,]),'function_call':([0,2,40,53,],[9,9,9,9,]),'expression':([0,2,11,16,20,21,26,27,28,29,30,31,35,40,49,53,],[12,12,23,36,37,38,41,42,43,44,45,46,49,12,55,12,]),'arg':([14,32,33,],[34,47,48,]),'block':([23,47,52,55,],[39,54,56,58,]),'else_statement':([39,],[51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','compiler.py',8),
  ('block -> INDENT statements DEDENT','block',3,'p_block','compiler.py',12),
  ('statements -> statement','statements',1,'p_statements','compiler.py',16),
  ('statements -> statements statement','statements',2,'p_statements','compiler.py',17),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',22),
  ('statement -> def_statement','statement',1,'p_statement','compiler.py',23),
  ('statement -> loop_statement','statement',1,'p_statement','compiler.py',24),
  ('statement -> return_statement','statement',1,'p_statement','compiler.py',25),
  ('statement -> expression_statement','statement',1,'p_statement','compiler.py',26),
  ('statement -> function_call','statement',1,'p_statement','compiler.py',27),
  ('statement -> NEWLINE','statement',1,'p_statement','compiler.py',28),
  ('function_call -> IDENT arg','function_call',2,'p_function_call','compiler.py',32),
  ('if_statement -> IFF expression block','if_statement',3,'p_if_statement','compiler.py',36),
  ('if_statement -> IFF expression block else_statement','if_statement',4,'p_if_statement','compiler.py',37),
  ('else_statement -> ELS block','else_statement',2,'p_else_statement','compiler.py',41),
  ('def_statement -> DEF IDENT arg block','def_statement',4,'p_def_statement','compiler.py',45),
  ('arg -> IDENT','arg',1,'p_arg','compiler.py',49),
  ('arg -> IDENT arg','arg',2,'p_arg','compiler.py',50),
  ('arg -> <empty>','arg',0,'p_arg','compiler.py',51),
  ('loop_statement -> LOP IDENT expression expression block','loop_statement',5,'p_loop_statement','compiler.py',55),
  ('expression -> NUMBER','expression',1,'p_expression_number','compiler.py',59),
  ('expression -> STRING','expression',1,'p_expression_string','compiler.py',63),
  ('expression -> BOOL','expression',1,'p_expression_bool','compiler.py',67),
  ('expression -> NOT expression','expression',2,'p_expression_not','compiler.py',71),
  ('expression -> IDENT','expression',1,'p_expression_ident','compiler.py',75),
  ('expression -> expression EQUAL expression','expression',3,'p_equal','compiler.py',79),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','compiler.py',83),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','compiler.py',87),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','compiler.py',91),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','compiler.py',95),
  ('expression -> expression MODULUS expression','expression',3,'p_expression_modulus','compiler.py',99),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','compiler.py',103),
  ('return_statement -> RET expression','return_statement',2,'p_return_statement','compiler.py',107),
  ('expression_statement -> expression NEWLINE','expression_statement',2,'p_expression_statement','compiler.py',111),
]
