
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL DEDENT DEF DIV ELS EQUAL IDENT IFF INDENT LOP LPAREN MINUS MODULUS MUL NEWLINE NOT NUMBER PLUS RET RPAREN STRINGprogram : statementsblock : INDENT statements DEDENTstatements : statement\n                  | statements statementstatement : if_statement\n                 | if_else_statement\n                 | def_statement\n                 | loop_statement\n                 | return_statement\n                 | expression_statement\n                 | function_call\n                 | NEWLINEfunction_call : IDENT argif_statement : IFF expression blockif_else_statement : if_statement else_statementelse_statement : ELS blockdef_statement : DEF IDENT arg blockarg : IDENT\n           | STRING\n           | NUMBER\n           | arg IDENT\n           | loop_statement : LOP IDENT expression expression blockexpression : NUMBERexpression : STRINGexpression : BOOLexpression : IDENTexpression : NOT expressionexpression : function_callexpression : expression EQUAL expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression MODULUS expressionexpression : LPAREN expression RPARENreturn_statement : RET expressionexpression_statement : expression'
    
_lr_action_items = {'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,54,56,57,58,60,61,],[11,11,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,11,-14,-30,-31,-32,-33,-34,-35,-21,-36,11,-17,-2,-23,]),'IFF':([0,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,54,56,57,58,60,61,],[12,12,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,12,-14,-30,-31,-32,-33,-34,-35,-21,-36,12,-17,-2,-23,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,54,56,57,58,60,61,],[14,14,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,14,-14,-30,-31,-32,-33,-34,-35,-21,-36,14,-17,-2,-23,]),'LOP':([0,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,54,56,57,58,60,61,],[16,16,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,16,-14,-30,-31,-32,-33,-34,-35,-21,-36,16,-17,-2,-23,]),'RET':([0,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,45,46,47,48,49,50,51,52,54,56,57,58,60,61,],[17,17,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,17,-14,-30,-31,-32,-33,-34,-35,-21,-36,17,-17,-2,-23,]),'IDENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,],[15,15,-3,-5,-6,-7,-8,-9,-10,-11,-12,27,-38,35,36,40,27,-24,-25,-26,27,27,-4,-15,36,-29,27,27,27,27,27,27,36,-18,54,-19,-20,27,-37,-28,-16,15,-14,-30,-31,-32,-33,-34,-35,54,-21,27,-36,15,-17,-2,-23,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,],[18,18,-3,-5,-6,-7,-8,-9,-10,-11,-12,18,-38,39,18,-24,-25,-26,18,18,-4,-15,39,-29,18,18,18,18,18,18,39,-18,-13,-19,-20,18,-37,-28,-16,18,-14,-30,-31,-32,-33,-34,-35,-21,18,-36,18,-17,-2,-23,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,19,-38,38,19,-24,-25,-26,19,19,-4,-15,38,-29,19,19,19,19,19,19,38,-18,-13,-19,-20,19,-37,-28,-16,19,-14,-30,-31,-32,-33,-34,-35,-21,19,-36,19,-17,-2,-23,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,20,-38,-22,20,-24,-25,-26,20,20,-4,-15,-22,-29,20,20,20,20,20,20,-18,-13,-19,-20,20,-37,-28,-16,20,-14,-30,-31,-32,-33,-34,-35,-21,20,-36,20,-17,-2,-23,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,21,-38,-22,21,-24,-25,-26,21,21,-4,-15,-22,-29,21,21,21,21,21,21,-18,-13,-19,-20,21,-37,-28,-16,21,-14,-30,-31,-32,-33,-34,-35,-21,21,-36,21,-17,-2,-23,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,22,-38,-22,22,-24,-25,-26,22,22,-4,-15,-22,-29,22,22,22,22,22,22,-18,-13,-19,-20,22,-37,-28,-16,22,-14,-30,-31,-32,-33,-34,-35,-21,22,-36,22,-17,-2,-23,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,46,47,48,49,50,51,52,54,56,58,60,61,],[0,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,-14,-30,-31,-32,-33,-34,-35,-21,-36,-17,-2,-23,]),'DEDENT':([3,4,5,6,7,8,9,10,11,13,15,18,19,20,23,24,27,28,36,37,38,39,41,42,44,46,47,48,49,50,51,52,54,56,57,58,60,61,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-38,-22,-24,-25,-26,-4,-15,-22,-29,-18,-13,-19,-20,-37,-28,-16,-14,-30,-31,-32,-33,-34,-35,-21,-36,60,-17,-2,-23,]),'ELS':([4,46,60,],[25,-14,-2,]),'EQUAL':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,29,-22,-24,-25,-26,29,-22,-29,-18,-13,-19,-20,29,29,29,29,29,29,29,29,29,-21,29,-36,29,]),'PLUS':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,30,-22,-24,-25,-26,30,-22,-29,-18,-13,-19,-20,30,30,30,30,30,30,30,30,30,-21,30,-36,30,]),'MINUS':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,31,-22,-24,-25,-26,31,-22,-29,-18,-13,-19,-20,31,31,31,31,31,31,31,31,31,-21,31,-36,31,]),'MUL':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,32,-22,-24,-25,-26,32,-22,-29,-18,-13,-19,-20,32,32,32,32,32,32,32,32,32,-21,32,-36,32,]),'DIV':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,33,-22,-24,-25,-26,33,-22,-29,-18,-13,-19,-20,33,33,33,33,33,33,33,33,33,-21,33,-36,33,]),'MODULUS':([10,13,15,18,19,20,26,27,28,36,37,38,39,41,42,43,47,48,49,50,51,52,54,55,56,59,],[-29,34,-22,-24,-25,-26,34,-22,-29,-18,-13,-19,-20,34,34,34,34,34,34,34,34,34,-21,34,-36,34,]),'INDENT':([18,19,20,25,26,27,28,35,36,37,38,39,42,47,48,49,50,51,52,53,54,56,59,],[-24,-25,-26,45,45,-22,-29,-22,-18,-13,-19,-20,-28,-30,-31,-32,-33,-34,-35,45,-21,-36,45,]),'RPAREN':([18,19,20,27,28,36,37,38,39,42,43,47,48,49,50,51,52,54,56,],[-24,-25,-26,-22,-29,-18,-13,-19,-20,-28,56,-30,-31,-32,-33,-34,-35,-21,-36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,45,],[2,57,]),'statement':([0,2,45,57,],[3,23,3,23,]),'if_statement':([0,2,45,57,],[4,4,4,4,]),'if_else_statement':([0,2,45,57,],[5,5,5,5,]),'def_statement':([0,2,45,57,],[6,6,6,6,]),'loop_statement':([0,2,45,57,],[7,7,7,7,]),'return_statement':([0,2,45,57,],[8,8,8,8,]),'expression_statement':([0,2,45,57,],[9,9,9,9,]),'function_call':([0,2,12,17,21,22,29,30,31,32,33,34,40,45,55,57,],[10,10,28,28,28,28,28,28,28,28,28,28,28,10,28,10,]),'expression':([0,2,12,17,21,22,29,30,31,32,33,34,40,45,55,57,],[13,13,26,41,42,43,47,48,49,50,51,52,55,13,59,13,]),'else_statement':([4,],[24,]),'arg':([15,27,35,],[37,37,53,]),'block':([25,26,53,59,],[44,46,58,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','compiler.py',8),
  ('block -> INDENT statements DEDENT','block',3,'p_block','compiler.py',12),
  ('statements -> statement','statements',1,'p_statements','compiler.py',16),
  ('statements -> statements statement','statements',2,'p_statements','compiler.py',17),
  ('statement -> if_statement','statement',1,'p_statement','compiler.py',22),
  ('statement -> if_else_statement','statement',1,'p_statement','compiler.py',23),
  ('statement -> def_statement','statement',1,'p_statement','compiler.py',24),
  ('statement -> loop_statement','statement',1,'p_statement','compiler.py',25),
  ('statement -> return_statement','statement',1,'p_statement','compiler.py',26),
  ('statement -> expression_statement','statement',1,'p_statement','compiler.py',27),
  ('statement -> function_call','statement',1,'p_statement','compiler.py',28),
  ('statement -> NEWLINE','statement',1,'p_statement','compiler.py',29),
  ('function_call -> IDENT arg','function_call',2,'p_function_call','compiler.py',33),
  ('if_statement -> IFF expression block','if_statement',3,'p_if_statement','compiler.py',37),
  ('if_else_statement -> if_statement else_statement','if_else_statement',2,'p_if_else_statement','compiler.py',41),
  ('else_statement -> ELS block','else_statement',2,'p_else_statement','compiler.py',45),
  ('def_statement -> DEF IDENT arg block','def_statement',4,'p_def_statement','compiler.py',49),
  ('arg -> IDENT','arg',1,'p_arg','compiler.py',53),
  ('arg -> STRING','arg',1,'p_arg','compiler.py',54),
  ('arg -> NUMBER','arg',1,'p_arg','compiler.py',55),
  ('arg -> arg IDENT','arg',2,'p_arg','compiler.py',56),
  ('arg -> <empty>','arg',0,'p_arg','compiler.py',57),
  ('loop_statement -> LOP IDENT expression expression block','loop_statement',5,'p_loop_statement','compiler.py',61),
  ('expression -> NUMBER','expression',1,'p_expression_number','compiler.py',65),
  ('expression -> STRING','expression',1,'p_expression_string','compiler.py',69),
  ('expression -> BOOL','expression',1,'p_expression_bool','compiler.py',73),
  ('expression -> IDENT','expression',1,'p_expression_ident','compiler.py',77),
  ('expression -> NOT expression','expression',2,'p_expression_not','compiler.py',81),
  ('expression -> function_call','expression',1,'p_expression_function_call','compiler.py',85),
  ('expression -> expression EQUAL expression','expression',3,'p_equal','compiler.py',89),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','compiler.py',93),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','compiler.py',97),
  ('expression -> expression MUL expression','expression',3,'p_expression_mul','compiler.py',101),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','compiler.py',105),
  ('expression -> expression MODULUS expression','expression',3,'p_expression_modulus','compiler.py',109),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','compiler.py',113),
  ('return_statement -> RET expression','return_statement',2,'p_return_statement','compiler.py',117),
  ('expression_statement -> expression','expression_statement',1,'p_expression_statement','compiler.py',121),
]
